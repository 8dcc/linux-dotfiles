#!/usr/bin/env bash
#
# Copyright 2025 8dcc
#
# This file is part of 8dcc's Linux dotfiles.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <https://www.gnu.org/licenses/>.
set -e

# From the `mailutils' package.
MOVEMAIL="movemail"

# Flags for `movemail'.
MOVEMAILFLAGS=(--preserve --verbose)

# Custom file where the inbox URIs are stored. Each line will be used for the
# `inbox-url' argument of `movemail', and usually haves the following format:
#
#   pops://user:pass@pop.example.net
#
# More specifically:
#
#   [protocol]://[user[:pass]@]hostname[:port]
#
# See also: https://mailutils.org/wiki/Fetching_Mail_with_Movemail
CREDFILE="$HOME/Mail/credentials.gpg"

# Destination file for the incoming mail. Used for the `destfile' argument of
# `movemail'.
DESTFILE="/var/mail/$USER"

#-------------------------------------------------------------------------------

if [ ! "$(command -v "$MOVEMAIL")" ]; then
    echo "The '$MOVEMAIL' command is not installed." 1>&2
    exit 1
fi

#-------------------------------------------------------------------------------

# If the file is encrypted (as it should be), decrypt it.
if [[ $CREDFILE == *.gpg ]]; then
    mapfile -t contents < <(gpg --output "-" --decrypt "$CREDFILE" 2>/dev/null)
else
    mapfile -t contents < "$CREDFILE"
fi

# Iterate each line in the file, i.e. each credential.
i=0
for cred in "${contents[@]}"; do
    $MOVEMAIL "${MOVEMAILFLAGS[@]}" "$cred" "$DESTFILE"

    ((i+=1))
    echo "mail-fetch: Fetched entry $i."
done
