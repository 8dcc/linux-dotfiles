#!/bin/bash
set -e

# Map each argument to the specified command. For example:
#
#     mapc shuf a.txt b.txt c.txt
#
# The previous code will call shuf(1) with the files named 'a.txt', 'b.txt' and
# 'c.txt' as arguments, in order. In this example, note how the lines of 'a.txt'
# will NOT be shuffled with the lines of the other two files (since they are
# part of different calls).
#
# Note that, since we are using 'set -e', execution will stop as soon as one of
# those commands fail (have a non-zero exit code).

if [ $# -lt 1 ]; then
    echo "Usage: $(basename "$0") CMD ARG..." 1>&2
    exit 1
fi

# For Lisp gentlemen:
#
#    (defun mapc (func arg-list)
#      (when (not (null? arg-list))
#        (func (car arg-list))
#        (mapc func (cdr arg-list))))
#
# Alternatively, using '&rest':
#
#    (defun mapc (func &rest args)
#      (when (not (null? args))
#        (func (car args))
#        (apply mapc
#               (cons func (cdr args)))))
#
for element in "${@:2}"; do
    $1 "$element"
done
