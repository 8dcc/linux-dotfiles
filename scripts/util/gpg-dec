#!/usr/bin/env bash
set -e

SELF="$(basename "$0")"
DEFAULT_OUTPUT="-"

#-------------------------------------------------------------------------------

if [ $# -gt 2 ]; then
    echo "Usage:"                           1>&2
    echo "    ${SELF}"                1>&2
    echo "    ${SELF} < INPUT"        1>&2
    echo "    ${SELF} INPUT [OUTPUT]" 1>&2
    exit 1
fi

#-------------------------------------------------------------------------------

inform() {
    echo -n "${SELF}: " 1>&2
    echo -e "$1" 1>&2
}

if [ $# -ge 1 ]; then
    # If we received an argument, use as input.
    file_input="$1"

    # If we got two arguments, the second one is the output file.
    if [ $# -ge 2 ]; then
        file_output="$2"
    else
        file_output="$DEFAULT_OUTPUT"
    fi
elif [ ! -t 0 ]; then
    # If the file is being piped to us (stdin is not a terminal), pass "-"
    # to gpg as input (stdin) and output (stdout).
    file_input="-"
    file_output="-"
else
    # Otherwise, open a temporary file on the default editor and use that.
    #
    # First, check if the EDITOR environment variable is set. If it is, use
    # it. Otherwise, use "nvim".
    editor=${EDITOR:-nvim}

    # Create a temporary file using mktemp(1)
    tmp_file="$(mktemp --tmpdir "gpg-dec.XXXX")"
    file_input="$tmp_file"
    file_output="$DEFAULT_OUTPUT"

    inform "Opening temporary file '${tmp_file}' in the '${editor}' editor..."
    $editor "$tmp_file"
    inform "Done editing. Decrypting to '${file_output}'"
fi

gpg --output "$file_output" --decrypt "$file_input"

if [ -n "$tmp_file" ]; then
    inform "Done decrypting. Deleting temporary file '${tmp_file}'"
    rm "$tmp_file"
fi
