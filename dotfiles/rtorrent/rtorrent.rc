# -*- mode: conf -*-
#
# 8dcc's rTorrent configuration. See: https://github.com/8dcc/linux-dotfiles
# Move to '~/.rtorrent.rc'.
#
# For the official configuration template, see:
# https://github.com/rakshasa/rtorrent/wiki/CONFIG-Template

#-------------------------------------------------------------------------------
# Directories

# Instance layout (base paths).
method.insert = cfg.basedir,  private|const|string, (cat, (system.env, HOME), "/.rtorrent/")
method.insert = cfg.download, private|const|string, (cat, (system.env, HOME), "/Downloads/01-Torrents/")
method.insert = cfg.logs,     private|const|string, (cat, (cfg.basedir), "log/")
method.insert = cfg.logfile,  private|const|string, (cat, (cfg.logs), "rtorrent-", (system.time), ".log")
method.insert = cfg.session,  private|const|string, (cat, (cfg.basedir), ".session/")
method.insert = cfg.watch,    private|const|string, (cat, (cfg.basedir), "watch/")

# Create instance directories
execute.throw = sh, -c, (cat,\
    "mkdir -p ",\
    "\"", (cfg.download), "\" ",\
    "\"", (cfg.logs),     "\" ",\
    "\"", (cfg.session),  "\" ",\
    "\"", (cfg.watch),    "/load\" ",\
    "\"", (cfg.watch),    "/start/epub\" ")

# Watched directories. The start times are incremental to spread the load caused
# by scanning the watch directories.
#
# Note that, in the 'watch_start_epub' task, the 'd.directory.set' part is
# actual part of the artument for 'load.verbose'. In conventional syntax:
#
#   load.start_verbose(cat(cfg.watch, "start/epub/*.torrent"),
#                      d.directory.set="~/Sync/Books/EPUB/")
#
schedule2 = watch_load, 11, 10, ((load.verbose, (cat, (cfg.watch), "load/*.torrent")))
schedule2 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.watch), "start/*.torrent")))
schedule2 = watch_start_epub, 22, 10, ((load.start_verbose, (cat, (cfg.watch), "start/epub/*.torrent"), d.directory.set="~/Sync/Books/EPUB/"))

#-------------------------------------------------------------------------------
# Network

# Random listening port for incoming peer traffic
network.port_range.set = 10000-50000
network.port_random.set = yes

# Tracker-less torrent and UDP tracker support. These settings are meant for
# public trackers.
dht.mode.set = on
protocol.pex.set = yes
trackers.use_udp.set = yes

# For bootstrapping DHT, you might need to run the following commands manually
# (using Ctrl+X from the ncurses interface).
#dht.add_node = router.bittorrent.com
#dht.add_node = dht.transmissionbt.com
#dht.add_node = router.bitcomet.com

# Peer settings
throttle.max_uploads.set = 100
throttle.max_uploads.global.set = 250
throttle.max_downloads.set = 100
throttle.max_downloads.global.set = 250
throttle.min_peers.normal.set = 20
throttle.max_peers.normal.set = 60
throttle.min_peers.seed.set = 30
throttle.max_peers.seed.set = 80
trackers.numwant.set = 80

# Encryption:
#   - require: Require encryption, and reject peers who don't support it.
#   - allow_incoming: Allow incoming encrypted connections from other peers.
#   - try_outgoing: Attempt to set up encryption when initiating a connection.
#   - enable_retry: If a peer is rejected for not supporting the encryption we
#     need, retry the handshake.
protocol.encryption.set = require,allow_incoming,try_outgoing,enable_retry

# Limits for file handle resources, this is optimized for an 'ulimit' of 1024 (a
# common default). You MUST leave a ceiling of handles reserved for rTorrent's
# internal needs!
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

# Memory resource usage.
# NOTE: Change depending on the machine.
pieces.memory.max.set = 1800M
network.xmlrpc.size_limit.set = 4M

# DNS cache timeout.
network.http.dns_cache_timeout.set = 25

#-------------------------------------------------------------------------------
# Logging

# Levels:
#   - critical error warn notice info debug
# Groups:
#   - connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
log.add_output = "notice", "log"
log.add_output = "warn", "log"
log.add_output = "error", "log"
log.add_output = "critical", "log"

#-------------------------------------------------------------------------------
# Misc

# Basic operational settings (no need to change these).
session.path.set = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))
log.execute = (cat, (cfg.logs), "execute.log")
execute.nothrow = sh, -c, (cat, "echo >",\
    (session.path), "rtorrent.pid", " ", (system.pid))

# Other operational settings.
encoding.add = UTF-8
system.umask.set = 0027
system.cwd.set = (directory.default)
view.sort_current = seeding, greater=d.ratio=

# Schedule a task for monitoring disk space, making sure we have enough.
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))

#-------------------------------------------------------------------------------
# Patch-specific settings

# Colors, from the "rtorrent-0.9.8_color.patch", available on:
#   https://gitlab.com/lindell.fredrik/rtorrent-vi-color
# or when installing rTorrent from my Guix channel:
#   https://github.com/8dcc/guix-channel
#
# Options:
#   - color_active_fg, color_inactive_fg, color_dead_fg, color_finished_fg
#   - color_active_bg, color_inactive_bg, color_dead_bg, color_finished_bg
# Colors:
#   - 0=black, 1=red, 2=green, 3=yellow, 4=blue, 5=magenta, 6=cyan, 7=white
color_active_fg = 4
color_inactive_fg = 7
color_dead_fg = 1
color_finished_fg = 2
