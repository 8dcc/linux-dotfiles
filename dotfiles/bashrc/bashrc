#!/usr/bin/env bash

#===============================================================================
# Move this file to '~/.bashrc'.
# See https://github.com/8dcc/linux-dotfiles
#===============================================================================

# If not running interactively, don't do anything
[ -z "$PS1" ] && return
[[ $- == *i* ]] || return

#-------------------------------------------------------------------------------
# Misc

# After each (non-builtin) command, Bash checks the window size, updating the
# number of rows and columns.
shopt -s checkwinsize

# Enable better color highlighting for 'ls'.
if [ -r "$HOME/.dircolors" ]; then
    eval "$(dircolors -b "$HOME/.dircolors")"
else
    eval "$(dircolors -b)"
fi

#-------------------------------------------------------------------------------
# History

# Ignore duplicate commands, as well as blank lines. Equivalent to Emacs' shell
# `eshell-hist-ignoredups' variable.
HISTCONTROL=ignoreboth

# History size on memory, and on disk.
HISTSIZE=1000
HISTFILESIZE=2000

# Append to the history, rather than overwriting it each time.
shopt -s histappend

#-------------------------------------------------------------------------------
# Prompt

PS1='\[\033[0;32m\]\u \[\033[1;34m\]\w\[\033[0m\]\[$(check_git_color)\]$(__git_ps1 " (%s)") \[\033[0m\]\$ '
PS2='> '

# Automatically added by the Guix install script.
if [ -n "$GUIX_ENVIRONMENT" ]; then
    if [[ $PS1 =~ (.*)"\\$" ]]; then
        PS1="${BASH_REMATCH[1]} [env]\\\$ "
    fi
fi

#-------------------------------------------------------------------------------
# Bash completion

if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# Bash tries to correct spelling errors during directory completion.
bind 'set completion-ignore-case on'

#-------------------------------------------------------------------------------
# Aliases

# For other bash scripts, see ../../scripts/util/
#
# Instead of using an alias for emerge, see EMERGE_DEFAULT_OPTS:
#   https://wiki.gentoo.org/wiki/EMERGE_DEFAULT_OPTS

# Usage: alias_safe ALIAS CMD [ARGS]
alias_safe() {
    # shellcheck disable=SC2139
    [[ $(command -v "$2") ]] && alias "$1"="$2 $3"
}

# Usage: alias_default_args CMD DEFAULT_ARGS
alias_default_args() {
    alias_safe "$1" "$1" "${*:2}"
}

# Usage: alias_env_vars CMD ENV_VARS
alias_env_vars() {
    # shellcheck disable=SC2139
    [[ $(command -v "$1") ]] && alias "$1"="${*:2} $1"
}

# Add color to common commands.
alias_default_args ls    '--color=auto -l --sort=version --group-directories-first --human-readable'
alias_default_args diff  '--color=auto -u'
alias_default_args grep  '--color=auto'
alias_default_args fgrep '--color=auto'
alias_default_args egrep '--color=auto'
alias_default_args ip    '--color=auto'

# Default arguments.
alias_default_args tree     '-Aaq'
alias_default_args less     '--chop-long-lines --ignore-case'
alias_default_args snc      '--print-interfaces --print-peer-info --print-progress'
alias_default_args valgrind '--leak-check=full --track-origins=yes'
alias_default_args yt-dlp   '--embed-metadata --embed-subs --merge-output-format mkv'

# Environment variables.
alias_env_vars ghidra '_JAVA_AWT_WM_NONREPARENTING=1'

# New aliases.
alias_safe disassemble 'objdump' '--disassembler-color=terminal -M intel -d'
alias_safe vi 'nvim'
alias_safe bytes2asm 'rz-asm' '-s intel -D -C'
alias_safe ',git-log-long' 'git' 'log --pretty=fuller --show-signature'

# New commands/functions.
# TODO: Some simple "util" scripts could be moved here.
archive-ss() {
    IMAGE_DIR="$HOME/02-Media/01-Images/01-Screenshots"  # Can't use '~'
    mv ~/ss-*.png "$IMAGE_DIR"
}

# Load an external aliases file, if found.
if [ -f "$HOME/.bash_aliases" ]; then
    . "$HOME/.bash_aliases"
fi

# Unset internal aliasing functions.
unset -f alias_safe
unset -f alias_default_args
unset -f alias_env_vars

#-------------------------------------------------------------------------------
# Custom exports

export PYTHONDONTWRITEBYTECODE=1  # Remove pycache stuff

#-------------------------------------------------------------------------------
# Git

if [ -f "$HOME/.my-scripts/startup/git-prompt.sh" ]; then
    . "$HOME/.my-scripts/startup/git-prompt.sh"
else
    __git_ps1() { echo -n ""; }
fi

check_git_color() {
    if [[ $(git status -s 2> /dev/null) ]]; then
        echo -e "\033[0;33m"
    elif [[ $(git diff --stat "$(git rev-parse --abbrev-ref --symbolic-full-name '@{u}' 2> /dev/null)" 2> /dev/null) ]]; then
        echo -e "\033[0;35m"
    else
        echo -e "\033[0;32m"
    fi
}

#-------------------------------------------------------------------------------
# Welcome messages, etc.

echo -e "Using bash as '${USER}', in '$(tty)' of '${HOSTNAME}'. Welcome.\n"
