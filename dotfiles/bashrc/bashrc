#!/usr/bin/env bash

#===============================================================================
# Move this file to '~/.bashrc'.
# See https://github.com/8dcc/linux-dotfiles
#===============================================================================

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# --- Misc ---------------------------------------------------------------------

# After each (non-builtin) command, Bash checks the window size, updating the
# number of rows and columns.
shopt -s checkwinsize

# Enable better color highlighting for 'ls'.
if [ -r "$HOME/.dircolors" ]; then
    eval "$(dircolors -b "$HOME/.dircolors")"
else
    eval "$(dircolors -b)"
fi

# --- History ------------------------------------------------------------------

# Ignore duplicate commands, as well as blank lines. Equivalent to Emacs' shell
# `eshell-hist-ignoredups' variable.
HISTCONTROL=ignoreboth

# History size on memory, and on disk.
HISTSIZE=1000
HISTFILESIZE=2000

# Append to the history, rather than overwriting it each time.
shopt -s histappend

# --- PS1 ----------------------------------------------------------------------

PS1='\[\033[0;32m\]\u \[\033[1;34m\]\w\[\033[0m\]\[$(check_git_color)\]$(__git_ps1 " (%s)") \[\033[0m\]\$ '
PS2='> '

# Automatically added by the Guix install script.
if [ -n "$GUIX_ENVIRONMENT" ]; then
    if [[ $PS1 =~ (.*)"\\$" ]]; then
        PS1="${BASH_REMATCH[1]} [env]\\\$ "
    fi
fi

# --- Bash completion ----------------------------------------------------------

if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# Bash tries to correct spelling errors during directory completion.
bind 'set completion-ignore-case on'

# --- Basic aliases ------------------------------------------------------------

# Add color
alias ls='ls --color=auto -l --sort=version --group-directories-first --human-readable'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ip='ip --color=auto'

if [ -f "$HOME/.bash_aliases" ]; then
    . "$HOME/.bash_aliases"
fi

# --- Custom aliases -----------------------------------------------------------

# For other bash scripts, see ../../scripts/usr/
# Instead of using an alias for emerge, see EMERGE_DEFAULT_OPTS:
#   https://wiki.gentoo.org/wiki/EMERGE_DEFAULT_OPTS

[[ $(command -v tree) ]]     && alias tree='tree -Aaq'
[[ $(command -v diff) ]]     && alias diff='diff -u --color=auto'
[[ $(command -v objdump) ]]  && alias disassemble='objdump --disassembler-color=terminal -M intel -d'
[[ $(command -v snc) ]]      && alias snc='snc --print-interfaces --print-peer-info --print-progress'
[[ $(command -v nvim) ]]     && alias vim='nvim'
[[ $(command -v rz-asm) ]]   && alias bytes2asm='rz-asm -s intel -D -C'
[[ $(command -v ghidra) ]]   && alias ghidra='_JAVA_AWT_WM_NONREPARENTING=1 ghidra'
[[ $(command -v valgrind) ]] && alias valgrind='valgrind --leak-check=full --track-origins=yes'
[[ $(command -v yt-dlp) ]]   && alias yt-dlp='yt-dlp --embed-metadata --embed-subs --merge-output-format mkv'

archive-ss() {
    IMAGE_DIR="$HOME/02-Media/01-Images/01-Screenshots"  # Can't use '~'
    mv ~/ss-*.png "$IMAGE_DIR"
}

# --- Custom exports -----------------------------------------------------------

export PYTHONDONTWRITEBYTECODE=1  # Remove pycache stuff

# --- Git ----------------------------------------------------------------------

if [ -f "$HOME/.my-scripts/startup/git-prompt.sh" ]; then
    . "$HOME/.my-scripts/startup/git-prompt.sh"
else
    __git_ps1() { echo -n ""; }
fi

check_git_color() {
    if [[ $(git status -s 2> /dev/null) ]]; then
        echo -e "\033[0;33m"
    elif [[ $(git diff --stat "$(git rev-parse --abbrev-ref --symbolic-full-name '@{u}' 2> /dev/null)" 2> /dev/null) ]]; then
        echo -e "\033[0;35m"
    else
        echo -e "\033[0;32m"
    fi
}

# --- Welcome messages, etc. ---------------------------------------------------

echo "( ._.)"
